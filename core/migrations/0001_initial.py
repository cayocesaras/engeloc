# Generated by Django 5.2.5 on 2025-09-26 18:01

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CadCliente',
            fields=[
                ('codigo', models.CharField(db_column='CODIGO', max_length=10, primary_key=True, serialize=False)),
                ('tipo', models.CharField(db_column='TIPO', max_length=8)),
                ('cnpj_cpf', models.CharField(db_column='CNPJ_CPF', max_length=18)),
                ('razao', models.CharField(db_column='RAZAO', max_length=100)),
                ('fantasia', models.CharField(db_column='FANTASIA', max_length=100)),
                ('estadual', models.CharField(db_column='ESTADUAL', max_length=14)),
                ('municipal', models.CharField(db_column='MUNICIPAL', max_length=14)),
                ('suframa', models.CharField(db_column='SUFRAMA', max_length=14)),
                ('cep', models.CharField(db_column='CEP', max_length=9)),
                ('logradouro', models.CharField(db_column='LOGRADOURO', max_length=100)),
                ('numero', models.CharField(db_column='NUMERO', max_length=6)),
                ('complemento', models.CharField(db_column='COMPLEMENTO', max_length=200)),
                ('bairro', models.CharField(db_column='BAIRRO', max_length=100)),
                ('uf', models.CharField(db_column='UF', max_length=2)),
                ('cidade', models.CharField(db_column='CIDADE', max_length=50)),
                ('telefone', models.CharField(db_column='TELEFONE', max_length=15)),
                ('email', models.CharField(db_column='EMAIL', max_length=100)),
            ],
            options={
                'verbose_name': 'Cadastro de Cliente',
                'verbose_name_plural': 'Cadastro de Clientes',
                'db_table': 'cad_cliente',
            },
        ),
        migrations.CreateModel(
            name='CadEmpresa',
            fields=[
                ('codigo', models.CharField(db_column='CODIGO', max_length=10, primary_key=True, serialize=False)),
                ('cnpj', models.CharField(db_column='CNPJ', max_length=18)),
                ('razao', models.CharField(db_column='RAZAO', max_length=100)),
                ('fantasia', models.CharField(db_column='FANTASIA', max_length=100)),
                ('estadual', models.CharField(db_column='ESTADUAL', max_length=14)),
                ('municipal', models.CharField(db_column='MUNICIPAL', max_length=14)),
                ('suframa', models.CharField(db_column='SUFRAMA', max_length=14)),
                ('cep', models.CharField(db_column='CEP', max_length=9)),
                ('logradouro', models.CharField(db_column='LOGRADOURO', max_length=100)),
                ('numero', models.CharField(db_column='NUMERO', max_length=6)),
                ('complemento', models.CharField(db_column='COMPLEMENTO', max_length=200)),
                ('bairro', models.CharField(db_column='BAIRRO', max_length=100)),
                ('uf', models.CharField(db_column='UF', max_length=2)),
                ('cidade', models.CharField(db_column='CIDADE', max_length=50)),
                ('telefone', models.CharField(db_column='TELEFONE', max_length=15)),
                ('email', models.CharField(db_column='EMAIL', max_length=100)),
            ],
            options={
                'verbose_name': 'Cadastro de Empresa',
                'verbose_name_plural': 'Cadastro de Empresas',
                'db_table': 'cad_empresa',
            },
        ),
        migrations.CreateModel(
            name='CadFornecedor',
            fields=[
                ('codigo', models.CharField(db_column='CODIGO', max_length=10, primary_key=True, serialize=False)),
                ('tipo', models.CharField(db_column='TIPO', max_length=8)),
                ('cnpj_cpf', models.CharField(db_column='CNPJ_CPF', max_length=18)),
                ('razao', models.CharField(db_column='RAZAO', max_length=100)),
                ('fantasia', models.CharField(db_column='FANTASIA', max_length=100)),
                ('estadual', models.CharField(db_column='ESTADUAL', max_length=14)),
                ('municipal', models.CharField(db_column='MUNICIPAL', max_length=14)),
                ('suframa', models.CharField(db_column='SUFRAMA', max_length=14)),
                ('cep', models.CharField(db_column='CEP', max_length=9)),
                ('logradouro', models.CharField(db_column='LOGRADOURO', max_length=100)),
                ('numero', models.CharField(db_column='NUMERO', max_length=6)),
                ('complemento', models.CharField(db_column='COMPLEMENTO', max_length=200)),
                ('bairro', models.CharField(db_column='BAIRRO', max_length=100)),
                ('uf', models.CharField(db_column='UF', max_length=2)),
                ('cidade', models.CharField(db_column='CIDADE', max_length=50)),
                ('telefone', models.CharField(db_column='TELEFONE', max_length=15)),
                ('email', models.CharField(db_column='EMAIL', max_length=100)),
            ],
            options={
                'verbose_name': 'Cadastro de Fornecedor',
                'verbose_name_plural': 'Cadastro de Fornecedores',
                'db_table': 'cad_fornecedor',
            },
        ),
        migrations.CreateModel(
            name='CadGrupoProduto',
            fields=[
                ('codigo', models.CharField(db_column='CODIGO', max_length=10, primary_key=True, serialize=False)),
                ('descricao', models.CharField(db_column='DESCRICAO', max_length=100)),
            ],
            options={
                'verbose_name': 'Cadastro de Grupo de Produto',
                'verbose_name_plural': 'Cadastro de Grupos de Produto',
                'db_table': 'cad_grupo_produto',
            },
        ),
        migrations.CreateModel(
            name='CadUnidadeMedida',
            fields=[
                ('codigo', models.CharField(db_column='CODIGO', max_length=10, primary_key=True, serialize=False)),
                ('descricao', models.CharField(db_column='DESCRICAO', max_length=100)),
            ],
            options={
                'verbose_name': 'Cadastro de Unidade de Medida',
                'verbose_name_plural': 'Cadastro de Unidades de Medida',
                'db_table': 'cad_unidade_medida',
            },
        ),
        migrations.CreateModel(
            name='CondicaoCobranca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('vencimento_dias', models.IntegerField()),
                ('juros', models.DecimalField(decimal_places=2, max_digits=10)),
                ('multa', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'verbose_name': 'Condição de Cobrança',
                'db_table': 'condicao_cobraca',
            },
        ),
        migrations.CreateModel(
            name='ContaCobranca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banco', models.CharField(choices=[('237', '237 - Bradesco'), ('033', '033 - Santander'), ('341', '341 - Banco Itaú'), ('001', '001 - Banco do Brasil'), ('756', '756 - Sicoob'), ('748', '748 - Sicredi'), ('104', '104 - Caixa Econômica'), ('077', '077 - Banco Inter'), ('085', '085 - Alios'), ('136', '136 - UNICRED'), ('070', '070 - Banco Brasilia (BSB)'), ('041', '041 - Banco Barisul'), ('208', '208 - BTG'), ('336', '336 - C6')], max_length=20)),
                ('numero', models.CharField(max_length=20, unique=True)),
                ('digito', models.CharField(max_length=1)),
                ('convenio', models.CharField(max_length=20)),
                ('carteira', models.CharField(max_length=2)),
            ],
            options={
                'verbose_name': 'Conta de Cobrança',
                'db_table': 'conta_cobranca',
            },
        ),
        migrations.CreateModel(
            name='FluxoManutencao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Cadastro de Fluxos de Manutenção',
                'db_table': 'fluxos_manutencao',
            },
        ),
        migrations.CreateModel(
            name='InstrucaoCobranca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('mensagem1', models.CharField(max_length=200)),
                ('mensagem2', models.CharField(max_length=200)),
                ('mensagem3', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Instrução de Cobrança',
                'db_table': 'instrucao_cobranca',
            },
        ),
        migrations.CreateModel(
            name='CadProduto',
            fields=[
                ('codigo', models.CharField(db_column='CODIGO', max_length=10, primary_key=True, serialize=False)),
                ('descricao', models.CharField(db_column='DESCRICAO', max_length=100)),
                ('preco', models.DecimalField(db_column='PRECO', decimal_places=2, max_digits=10)),
                ('altura', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Altura (cm)')),
                ('largura', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Largura (cm)')),
                ('profundidade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Profundidade (cm)')),
                ('peso', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Peso (kg)')),
                ('tipo', models.CharField(db_column='TIPO', max_length=10)),
                ('ressarcimento', models.DecimalField(db_column='RESSARCIMENTO', decimal_places=2, max_digits=10)),
                ('is_ativo', models.IntegerField(db_column='IS_ATIVO')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='produtos/')),
                ('grupo', models.ForeignKey(db_column='GRUPO', on_delete=django.db.models.deletion.CASCADE, to='core.cadgrupoproduto')),
                ('unidade', models.ForeignKey(db_column='UNIDADE', on_delete=django.db.models.deletion.CASCADE, to='core.cadunidademedida')),
            ],
            options={
                'verbose_name': 'Cadastro de Produto',
                'verbose_name_plural': 'Cadastro de Produtos',
                'db_table': 'cad_produto',
            },
        ),
        migrations.CreateModel(
            name='CadItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(default=1, max_length=20, unique=True)),
                ('descricao', models.CharField(max_length=200)),
                ('ativo', models.BooleanField(default=True)),
                ('unidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cadunidademedida')),
            ],
            options={
                'verbose_name': 'Cadastro de Item',
                'verbose_name_plural': 'Cadastro de Itens',
                'db_table': 'cad_item',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='Devolucao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_devolucao', models.DateField(default=django.utils.timezone.now, verbose_name='Data de devolução')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('multa_por_atraso', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('custo_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('finalizada', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Responsável pela devolução')),
            ],
            options={
                'verbose_name': 'Devolução',
                'verbose_name_plural': 'Devoluções',
                'ordering': ['-data_devolucao', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EtapaManutencao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ordem', models.PositiveIntegerField()),
                ('prazo_dias', models.PositiveIntegerField(help_text='Prazo para concluir a etapa em dias')),
                ('fluxo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etapas', to='core.fluxomanutencao')),
            ],
            options={
                'verbose_name': 'Cadastro de Etapa de Manutenção',
                'verbose_name_plural': 'Cadastro de Etapas de Manutenção',
                'db_table': 'etapas_manutencao',
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='ItensEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código do Item')),
                ('numero_serie', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('status', models.CharField(choices=[('disponivel', 'Disponível'), ('locado', 'Locado'), ('manutencao', 'Em Manutenção')], default='disponivel', max_length=20)),
                ('data_ultimo_status', models.DateTimeField(auto_now=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cadproduto')),
            ],
            options={
                'verbose_name': 'Cadastro de Item de Estoque',
                'verbose_name_plural': 'Cadastro de Itens de Estoque',
                'db_table': 'itens_estoque',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ItensLocacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField()),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cadproduto')),
            ],
            options={
                'verbose_name': 'Cadastro de Item de Locação',
                'verbose_name_plural': 'Cadastro de Itens de Locação',
                'db_table': 'itens_locacao',
            },
        ),
        migrations.CreateModel(
            name='ItemDevolucao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1)),
                ('estado', models.CharField(choices=[('bom', 'Bom'), ('danificado', 'Danificado'), ('perdido', 'Perdido')], default='bom', max_length=12)),
                ('custo_adicional', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('encaminhado_manutencao', models.BooleanField(default=False)),
                ('observacoes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('devolucao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='core.devolucao')),
                ('item_locacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devolucoes_item', to='core.itenslocacao', verbose_name='Item da locação')),
            ],
            options={
                'verbose_name': 'Item de Devolução',
                'verbose_name_plural': 'Itens de Devolução',
            },
        ),
        migrations.CreateModel(
            name='Locacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('data', models.DateField(auto_now_add=True)),
                ('solicitante', models.CharField(default='', max_length=100, verbose_name='Solicitante')),
                ('inicio', models.DateField(db_column='DATA_INICIO', default=django.utils.timezone.now)),
                ('fim', models.DateField(db_column='DATA_FIM', default=django.utils.timezone.now)),
                ('dias', models.DecimalField(decimal_places=0, editable=False, max_digits=10)),
                ('desconto', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('pagamento', models.CharField(choices=[('dinheiro', 'Dinheiro'), ('cartao', 'Cartão'), ('transferencia', 'Transferência')], default='dinheiro', max_length=20)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('reprovada', 'Reprovada'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída')], default='pendente', max_length=20)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cliente', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='core.cadcliente')),
            ],
            options={
                'verbose_name': 'Cadastro de Locação',
                'verbose_name_plural': 'Cadastro de Locações',
                'db_table': 'cad_locacao',
            },
        ),
        migrations.AddField(
            model_name='itenslocacao',
            name='locacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='core.locacao'),
        ),
        migrations.CreateModel(
            name='EntregaLocacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20)),
                ('quantidade', models.PositiveIntegerField()),
                ('motorista', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cadproduto')),
                ('locacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.locacao')),
            ],
            options={
                'verbose_name': 'Entrega Locação',
                'db_table': 'entrega_locacao',
            },
        ),
        migrations.AddField(
            model_name='devolucao',
            name='locacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devolucoes', to='core.locacao', verbose_name='Locação'),
        ),
        migrations.CreateModel(
            name='ContasReceber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(blank=True, default='', max_length=255)),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_emissao', models.DateField(default=django.utils.timezone.now)),
                ('data_vencimento', models.DateField()),
                ('data_pagamento', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('aberto', 'Em Aberto'), ('pago', 'Pago'), ('cancelado', 'Cancelado')], default='aberto', max_length=20)),
                ('forma_pagamento', models.CharField(choices=[('dinheiro', 'Dinheiro'), ('cartao', 'Cartão'), ('pix', 'Pix'), ('boleto', 'Boleto')], default='boleto', max_length=20)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cadcliente')),
                ('locacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='titulos', to='core.locacao')),
            ],
            options={
                'verbose_name': 'Conta a Receber',
                'verbose_name_plural': 'Contas a Receber',
                'db_table': 'contas_receber',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Manutencao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField(default=django.utils.timezone.now)),
                ('observacoes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado')], default='pendente', max_length=20)),
                ('fluxo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.fluxomanutencao')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.itensestoque')),
            ],
            options={
                'verbose_name': 'Cadastro de Manutenção',
                'verbose_name_plural': 'Cadastro de Manutenções',
                'db_table': 'manutencoes',
            },
        ),
        migrations.CreateModel(
            name='EtapaManutencaoExecutada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_prevista', models.DateField()),
                ('data_conclusao', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('concluida', 'Concluída')], default='pendente', max_length=20)),
                ('etapa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.etapamanutencao')),
                ('manutencao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etapas', to='core.manutencao')),
            ],
            options={
                'verbose_name': 'Etapa de Manutenção Executada',
                'verbose_name_plural': 'Etapas de Manutenção Executada',
                'db_table': 'etapa_manutencao_executada',
                'ordering': ['etapa__ordem'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Movimentacoes',
            fields=[
                ('codigo', models.AutoField(primary_key=True, serialize=False)),
                ('documento', models.CharField(db_column='DOCUMENTO', default='', max_length=20)),
                ('data_hora', models.DateTimeField(db_column='DATA_HORA', default=django.utils.timezone.now)),
                ('data_movimentacao', models.DateField(db_column='DATA_MOVIMENTACAO')),
                ('quantidade', models.DecimalField(db_column='QUANTIDADE', decimal_places=2, max_digits=10)),
                ('tipo', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída'), ('emprestimo', 'Empréstimo'), ('devolucao', 'Devolução'), ('avaria', 'Avaria')], db_column='TIPO', default='entrada', max_length=10)),
                ('produto', models.ForeignKey(db_column='PRODUTO', default='', on_delete=django.db.models.deletion.CASCADE, to='core.cadproduto')),
            ],
            options={
                'db_table': 'movimentacoes',
            },
        ),
        migrations.CreateModel(
            name='RelacaoItemProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relacoes', to='core.caditem')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relacoes', to='core.cadproduto')),
            ],
            options={
                'verbose_name': 'Relação Item-Produto',
                'verbose_name_plural': 'Relações Item-Produto',
                'db_table': 'relacao_item_produto',
            },
        ),
        migrations.CreateModel(
            name='SolicitacaoCompra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('valor_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('data_solicitacao', models.DateField(default=django.utils.timezone.now)),
                ('justificativa', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('em_aberto', 'Em Aberto'), ('aprovada', 'Aprovada'), ('reprovada', 'Reprovada')], default='em_aberto', max_length=15)),
                ('data_hora_criacao', models.DateTimeField(auto_now_add=True)),
                ('fornecedor', models.ForeignKey(db_column='FORNECEDOR', on_delete=django.db.models.deletion.CASCADE, to='core.cadfornecedor')),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solicitação de Compra',
                'verbose_name_plural': 'Solicitações de Compra',
                'db_table': 'solicitacao_compra',
                'ordering': ['-data_solicitacao'],
            },
        ),
        migrations.CreateModel(
            name='ItensSolicitacaoCompra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField()),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.caditem')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='core.solicitacaocompra')),
            ],
            options={
                'verbose_name': 'Item de Solicitação de Compra',
                'verbose_name_plural': 'Itens de Solicitação de Compra',
                'db_table': 'itens_solicitacao_compra',
            },
        ),
        migrations.CreateModel(
            name='ContasPagar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(help_text='Descrição do pagamento ou serviço', max_length=200)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=12)),
                ('data_emissao', models.DateField(default=django.utils.timezone.now)),
                ('data_vencimento', models.DateField()),
                ('data_pagamento', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('pago', 'Pago'), ('atrasado', 'Atrasado'), ('cancelado', 'Cancelado')], default='pendente', max_length=20)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cadfornecedor')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contas_pagar', to='core.solicitacaocompra')),
            ],
            options={
                'ordering': ['data_vencimento'],
            },
        ),
    ]
